*[BcelJUnitAstCompiler]: yokohama.unit.translator.BcelJUnitAstCompiler
*[File]: java.io.File
*[Optional]: java.util.Optional

# Test: Test makeClassFilePath

Assert `new BcelJUnitAstCompiler().makeClassFilePath(@Optional@of(new File(dest).toPath()), packageName, className)`
    is `new File(expected).toPath()`
for all dest, packageName, className and expected in Table [Fixture].

| dest | packageName   | className | expected                     |
| ---- | ------------- | --------- | ---------------------------- |
| ""   | "com.example" | "Hello"   | "com/example/Hello.class"    |
| "."  | "com.example" | "Hello"   | "./com/example/Hello.class"  |
| "/d" | "com.example" | "Hello"   | "/d/com/example/Hello.class" |
| "d/" | "com.example" | "Hello"   | "d/com/example/Hello.class"  |
[Fixture]

# Test: makeClassFilePath uses dot as prefix path when dest argument is empty.

Assert `new BcelJUnitAstCompiler().makeClassFilePath(@Optional@empty(), "com.example", "Hello")`
    is `new File("./com/example/Hello.class").toPath()`.
