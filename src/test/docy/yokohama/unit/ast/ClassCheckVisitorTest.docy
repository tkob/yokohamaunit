*[ClassLoader]: java.lang.ClassLoader
*[Optional]: java.util.Optional
*[ClassCheckVisitor]: yokohama.unit.ast.ClassCheckVisitor
*[ErrorMessage]: yokohama.unit.position.ErrorMessage
*[ClassResolver]: yokohama.unit.util.ClassResolver
*[Tuple]: javaslang.Tuple

# Test: ClassCheckVisitor.check

## Setup
Let docy = `"yokohama/unit/ast/TestClassCheck.docy"`.

Let docyPath = `new java.io.File(docy).toPath()`.

Let ins = `ClassLoader.getSystemResourceAsStream(docy)`.

Let errors = `new java.util.ArrayList()`.

Let docyParser = `new yokohama.unit.translator.DocyParserImpl()`.

Let ctx = `docyParser.parse(docyPath, ins, errors)`.

Let factory = `new yokohama.unit.translator.ParseTreeToAstVisitorFactory()`.

Let ast = `factory.create(Optional.of(docyPath)).visitGroup(ctx)`.

Let classResolver = `new ClassResolver([Tuple.of("List", "java.util.List")])`.

Let visitor = `new ClassCheckVisitor(classResolver)`.

## Verify

Assert that `visitor.check(ast).size()` is `13`.
